Terminals unused in grammar

   TOKEN_ERROR


State 32 conflicts: 4 reduce/reduce
State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: progrElements

    2 progrElements: funcDeclaration progrElements
    3              | varDeclaration progrElements
    4              | %empty

    5 name: TK_IDENTIFIER

    6 vector: name 'q' expression 'p'

    7 type: KW_CHAR
    8     | KW_INT
    9     | KW_FLOAT

   10 literal: LIT_INTEGER
   11        | LIT_FLOAT
   12        | LIT_CHAR

   13 funcDeclaration: type name 'd' parameterList 'b'
   14                | type name 'd' parameterList 'b' cmd

   15 cmdBlock: '{' cmdList '}'

   16 cmdList: cmd ';' cmdList
   17        | %empty

   18 cmd: attribution
   19    | KW_IF expression KW_THEN cmd
   20    | KW_IF expression KW_THEN cmd KW_ELSE cmd
   21    | KW_WHILE expression cmdBlock
   22    | KW_READ name
   23    | KW_PRINT argList
   24    | KW_RETURN expression
   25    | cmdBlock
   26    | %empty

   27 parameterList: type name ',' parameterList
   28              | type name
   29              | %empty

   30 litList: literal
   31        | literal litList

   32 argList: expression ',' argList
   33        | expression

   34 varDeclaration: type name '=' expression ';'
   35               | type name 'q' LIT_INTEGER 'p' ';'
   36               | type name 'q' LIT_INTEGER 'p' ':' litList ';'

   37 attribution: name '=' expression
   38            | vector '=' expression

   39 expression: literal
   40           | LIT_STRING
   41           | name
   42           | vector
   43           | expression '+' expression
   44           | expression '-' expression
   45           | expression '*' expression
   46           | expression '/' expression
   47           | expression '<' expression
   48           | expression '>' expression
   49           | expression OPERATOR_LE expression
   50           | expression OPERATOR_GE expression
   51           | expression OPERATOR_EQ expression
   52           | expression OPERATOR_OR expression
   53           | expression OPERATOR_AND expression
   54           | OPERATOR_NOT expression
   55           | 'd' expression 'b'
   56           | name 'd' argList 'b'
   57           | %empty


Terminals, with rules where they appear

$end (0) 0
'*' (42) 45
'+' (43) 43
',' (44) 27 32
'-' (45) 44
'/' (47) 46
':' (58) 36
';' (59) 16 34 35 36
'<' (60) 47
'=' (61) 34 37 38
'>' (62) 48
'b' (98) 13 14 55 56
'd' (100) 13 14 55 56
'p' (112) 6 35 36
'q' (113) 6 35 36
'{' (123) 15
'}' (125) 15
error (256)
KW_CHAR (258) 7
KW_INT (259) 8
KW_FLOAT (260) 9
KW_IF (261) 19 20
KW_THEN (262) 19 20
KW_ELSE (263) 20
KW_WHILE (264) 21
KW_READ (265) 22
KW_RETURN (266) 24
KW_PRINT (267) 23
OPERATOR_LE (268) 49
OPERATOR_GE (269) 50
OPERATOR_EQ (270) 51
OPERATOR_OR (271) 52
OPERATOR_AND (272) 53
OPERATOR_NOT (273) 54
TK_IDENTIFIER (274) 5
LIT_INTEGER (275) 10 35 36
LIT_FLOAT (276) 11
LIT_CHAR (277) 12
LIT_STRING (278) 40
TOKEN_ERROR (279)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1, on right: 0
progrElements (43)
    on left: 2 3 4, on right: 1 2 3
name (44)
    on left: 5, on right: 6 13 14 22 27 28 34 35 36 37 41 56
vector (45)
    on left: 6, on right: 38 42
type (46)
    on left: 7 8 9, on right: 13 14 27 28 34 35 36
literal (47)
    on left: 10 11 12, on right: 30 31 39
funcDeclaration (48)
    on left: 13 14, on right: 2
cmdBlock (49)
    on left: 15, on right: 21 25
cmdList (50)
    on left: 16 17, on right: 15 16
cmd (51)
    on left: 18 19 20 21 22 23 24 25 26, on right: 14 16 19 20
parameterList (52)
    on left: 27 28 29, on right: 13 14 27
litList (53)
    on left: 30 31, on right: 31 36
argList (54)
    on left: 32 33, on right: 23 32 56
varDeclaration (55)
    on left: 34 35 36, on right: 3
attribution (56)
    on left: 37 38, on right: 18
expression (57)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57, on right: 6 19 20 21 24 32 33 34 37 38 43 44 45 46 47 48 49
    50 51 52 53 54 55


State 0

    0 $accept: . program $end

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (progrElements)

    program          go to state 4
    progrElements    go to state 5
    type             go to state 6
    funcDeclaration  go to state 7
    varDeclaration   go to state 8


State 1

    7 type: KW_CHAR .

    $default  reduce using rule 7 (type)


State 2

    8 type: KW_INT .

    $default  reduce using rule 8 (type)


State 3

    9 type: KW_FLOAT .

    $default  reduce using rule 9 (type)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 9


State 5

    1 program: progrElements .

    $default  reduce using rule 1 (program)


State 6

   13 funcDeclaration: type . name 'd' parameterList 'b'
   14                | type . name 'd' parameterList 'b' cmd
   34 varDeclaration: type . name '=' expression ';'
   35               | type . name 'q' LIT_INTEGER 'p' ';'
   36               | type . name 'q' LIT_INTEGER 'p' ':' litList ';'

    TK_IDENTIFIER  shift, and go to state 10

    name  go to state 11


State 7

    2 progrElements: funcDeclaration . progrElements

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (progrElements)

    progrElements    go to state 12
    type             go to state 6
    funcDeclaration  go to state 7
    varDeclaration   go to state 8


State 8

    3 progrElements: varDeclaration . progrElements

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 4 (progrElements)

    progrElements    go to state 13
    type             go to state 6
    funcDeclaration  go to state 7
    varDeclaration   go to state 8


State 9

    0 $accept: program $end .

    $default  accept


State 10

    5 name: TK_IDENTIFIER .

    $default  reduce using rule 5 (name)


State 11

   13 funcDeclaration: type name . 'd' parameterList 'b'
   14                | type name . 'd' parameterList 'b' cmd
   34 varDeclaration: type name . '=' expression ';'
   35               | type name . 'q' LIT_INTEGER 'p' ';'
   36               | type name . 'q' LIT_INTEGER 'p' ':' litList ';'

    'q'  shift, and go to state 14
    'd'  shift, and go to state 15
    '='  shift, and go to state 16


State 12

    2 progrElements: funcDeclaration progrElements .

    $default  reduce using rule 2 (progrElements)


State 13

    3 progrElements: varDeclaration progrElements .

    $default  reduce using rule 3 (progrElements)


State 14

   35 varDeclaration: type name 'q' . LIT_INTEGER 'p' ';'
   36               | type name 'q' . LIT_INTEGER 'p' ':' litList ';'

    LIT_INTEGER  shift, and go to state 17


State 15

   13 funcDeclaration: type name 'd' . parameterList 'b'
   14                | type name 'd' . parameterList 'b' cmd

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 29 (parameterList)

    type           go to state 18
    parameterList  go to state 19


State 16

   34 varDeclaration: type name '=' . expression ';'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 29


State 17

   35 varDeclaration: type name 'q' LIT_INTEGER . 'p' ';'
   36               | type name 'q' LIT_INTEGER . 'p' ':' litList ';'

    'p'  shift, and go to state 30


State 18

   27 parameterList: type . name ',' parameterList
   28              | type . name

    TK_IDENTIFIER  shift, and go to state 10

    name  go to state 31


State 19

   13 funcDeclaration: type name 'd' parameterList . 'b'
   14                | type name 'd' parameterList . 'b' cmd

    'b'  shift, and go to state 32


State 20

   54 expression: OPERATOR_NOT . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 33


State 21

   10 literal: LIT_INTEGER .

    $default  reduce using rule 10 (literal)


State 22

   11 literal: LIT_FLOAT .

    $default  reduce using rule 11 (literal)


State 23

   12 literal: LIT_CHAR .

    $default  reduce using rule 12 (literal)


State 24

   40 expression: LIT_STRING .

    $default  reduce using rule 40 (expression)


State 25

   55 expression: 'd' . expression 'b'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 34


State 26

    6 vector: name . 'q' expression 'p'
   41 expression: name .
   56           | name . 'd' argList 'b'

    'q'  shift, and go to state 35
    'd'  shift, and go to state 36

    $default  reduce using rule 41 (expression)


State 27

   42 expression: vector .

    $default  reduce using rule 42 (expression)


State 28

   39 expression: literal .

    $default  reduce using rule 39 (expression)


State 29

   34 varDeclaration: type name '=' expression . ';'
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47
    ';'           shift, and go to state 48


State 30

   35 varDeclaration: type name 'q' LIT_INTEGER 'p' . ';'
   36               | type name 'q' LIT_INTEGER 'p' . ':' litList ';'

    ';'  shift, and go to state 49
    ':'  shift, and go to state 50


State 31

   27 parameterList: type name . ',' parameterList
   28              | type name .

    ','  shift, and go to state 51

    $default  reduce using rule 28 (parameterList)


State 32

   13 funcDeclaration: type name 'd' parameterList 'b' .
   14                | type name 'd' parameterList 'b' . cmd

    KW_IF          shift, and go to state 52
    KW_WHILE       shift, and go to state 53
    KW_READ        shift, and go to state 54
    KW_RETURN      shift, and go to state 55
    KW_PRINT       shift, and go to state 56
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 57

    $end      reduce using rule 13 (funcDeclaration)
    $end      [reduce using rule 26 (cmd)]
    KW_CHAR   reduce using rule 13 (funcDeclaration)
    KW_CHAR   [reduce using rule 26 (cmd)]
    KW_INT    reduce using rule 13 (funcDeclaration)
    KW_INT    [reduce using rule 26 (cmd)]
    KW_FLOAT  reduce using rule 13 (funcDeclaration)
    KW_FLOAT  [reduce using rule 26 (cmd)]
    $default  reduce using rule 13 (funcDeclaration)

    name         go to state 58
    vector       go to state 59
    cmdBlock     go to state 60
    cmd          go to state 61
    attribution  go to state 62


State 33

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression
   54           | OPERATOR_NOT expression .

    $default  reduce using rule 54 (expression)


State 34

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression
   55           | 'd' expression . 'b'

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47
    'b'           shift, and go to state 63


State 35

    6 vector: name 'q' . expression 'p'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 64


State 36

   56 expression: name 'd' . argList 'b'

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    argList     go to state 65
    expression  go to state 66


State 37

   49 expression: expression OPERATOR_LE . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 67


State 38

   50 expression: expression OPERATOR_GE . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 68


State 39

   51 expression: expression OPERATOR_EQ . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 69


State 40

   52 expression: expression OPERATOR_OR . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 70


State 41

   53 expression: expression OPERATOR_AND . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 71


State 42

   47 expression: expression '<' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 72


State 43

   48 expression: expression '>' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 73


State 44

   43 expression: expression '+' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 74


State 45

   44 expression: expression '-' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 75


State 46

   45 expression: expression '*' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 76


State 47

   46 expression: expression '/' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 77


State 48

   34 varDeclaration: type name '=' expression ';' .

    $default  reduce using rule 34 (varDeclaration)


State 49

   35 varDeclaration: type name 'q' LIT_INTEGER 'p' ';' .

    $default  reduce using rule 35 (varDeclaration)


State 50

   36 varDeclaration: type name 'q' LIT_INTEGER 'p' ':' . litList ';'

    LIT_INTEGER  shift, and go to state 21
    LIT_FLOAT    shift, and go to state 22
    LIT_CHAR     shift, and go to state 23

    literal  go to state 78
    litList  go to state 79


State 51

   27 parameterList: type name ',' . parameterList

    KW_CHAR   shift, and go to state 1
    KW_INT    shift, and go to state 2
    KW_FLOAT  shift, and go to state 3

    $default  reduce using rule 29 (parameterList)

    type           go to state 18
    parameterList  go to state 80


State 52

   19 cmd: KW_IF . expression KW_THEN cmd
   20    | KW_IF . expression KW_THEN cmd KW_ELSE cmd

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 81


State 53

   21 cmd: KW_WHILE . expression cmdBlock

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 82


State 54

   22 cmd: KW_READ . name

    TK_IDENTIFIER  shift, and go to state 10

    name  go to state 83


State 55

   24 cmd: KW_RETURN . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 84


State 56

   23 cmd: KW_PRINT . argList

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    argList     go to state 85
    expression  go to state 66


State 57

   15 cmdBlock: '{' . cmdList '}'

    KW_IF          shift, and go to state 52
    KW_WHILE       shift, and go to state 53
    KW_READ        shift, and go to state 54
    KW_RETURN      shift, and go to state 55
    KW_PRINT       shift, and go to state 56
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 57

    ';'       reduce using rule 26 (cmd)
    $default  reduce using rule 17 (cmdList)

    name         go to state 58
    vector       go to state 59
    cmdBlock     go to state 60
    cmdList      go to state 86
    cmd          go to state 87
    attribution  go to state 62


State 58

    6 vector: name . 'q' expression 'p'
   37 attribution: name . '=' expression

    'q'  shift, and go to state 35
    '='  shift, and go to state 88


State 59

   38 attribution: vector . '=' expression

    '='  shift, and go to state 89


State 60

   25 cmd: cmdBlock .

    $default  reduce using rule 25 (cmd)


State 61

   14 funcDeclaration: type name 'd' parameterList 'b' cmd .

    $default  reduce using rule 14 (funcDeclaration)


State 62

   18 cmd: attribution .

    $default  reduce using rule 18 (cmd)


State 63

   55 expression: 'd' expression 'b' .

    $default  reduce using rule 55 (expression)


State 64

    6 vector: name 'q' expression . 'p'
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47
    'p'           shift, and go to state 90


State 65

   56 expression: name 'd' argList . 'b'

    'b'  shift, and go to state 91


State 66

   32 argList: expression . ',' argList
   33        | expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47
    ','           shift, and go to state 92

    $default  reduce using rule 33 (argList)


State 67

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   49           | expression OPERATOR_LE expression .
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 49 (expression)


State 68

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   50           | expression OPERATOR_GE expression .
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 50 (expression)


State 69

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   51           | expression OPERATOR_EQ expression .
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 51 (expression)


State 70

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   52           | expression OPERATOR_OR expression .
   53           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 52 (expression)


State 71

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression
   53           | expression OPERATOR_AND expression .

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 53 (expression)


State 72

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   47           | expression '<' expression .
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 47 (expression)


State 73

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   48           | expression '>' expression .
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    '+'  shift, and go to state 44
    '-'  shift, and go to state 45
    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 48 (expression)


State 74

   43 expression: expression . '+' expression
   43           | expression '+' expression .
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 43 (expression)


State 75

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   44           | expression '-' expression .
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    '*'  shift, and go to state 46
    '/'  shift, and go to state 47

    $default  reduce using rule 44 (expression)


State 76

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   45           | expression '*' expression .
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    $default  reduce using rule 45 (expression)


State 77

   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   46           | expression '/' expression .
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    $default  reduce using rule 46 (expression)


State 78

   30 litList: literal .
   31        | literal . litList

    LIT_INTEGER  shift, and go to state 21
    LIT_FLOAT    shift, and go to state 22
    LIT_CHAR     shift, and go to state 23

    $default  reduce using rule 30 (litList)

    literal  go to state 78
    litList  go to state 93


State 79

   36 varDeclaration: type name 'q' LIT_INTEGER 'p' ':' litList . ';'

    ';'  shift, and go to state 94


State 80

   27 parameterList: type name ',' parameterList .

    $default  reduce using rule 27 (parameterList)


State 81

   19 cmd: KW_IF expression . KW_THEN cmd
   20    | KW_IF expression . KW_THEN cmd KW_ELSE cmd
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    KW_THEN       shift, and go to state 95
    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47


State 82

   21 cmd: KW_WHILE expression . cmdBlock
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47
    '{'           shift, and go to state 57

    cmdBlock  go to state 96


State 83

   22 cmd: KW_READ name .

    $default  reduce using rule 22 (cmd)


State 84

   24 cmd: KW_RETURN expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47

    $default  reduce using rule 24 (cmd)


State 85

   23 cmd: KW_PRINT argList .

    $default  reduce using rule 23 (cmd)


State 86

   15 cmdBlock: '{' cmdList . '}'

    '}'  shift, and go to state 97


State 87

   16 cmdList: cmd . ';' cmdList

    ';'  shift, and go to state 98


State 88

   37 attribution: name '=' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 99


State 89

   38 attribution: vector '=' . expression

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    expression  go to state 100


State 90

    6 vector: name 'q' expression 'p' .

    $default  reduce using rule 6 (vector)


State 91

   56 expression: name 'd' argList 'b' .

    $default  reduce using rule 56 (expression)


State 92

   32 argList: expression ',' . argList

    OPERATOR_NOT   shift, and go to state 20
    TK_IDENTIFIER  shift, and go to state 10
    LIT_INTEGER    shift, and go to state 21
    LIT_FLOAT      shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    'd'            shift, and go to state 25

    $default  reduce using rule 57 (expression)

    name        go to state 26
    vector      go to state 27
    literal     go to state 28
    argList     go to state 101
    expression  go to state 66


State 93

   31 litList: literal litList .

    $default  reduce using rule 31 (litList)


State 94

   36 varDeclaration: type name 'q' LIT_INTEGER 'p' ':' litList ';' .

    $default  reduce using rule 36 (varDeclaration)


State 95

   19 cmd: KW_IF expression KW_THEN . cmd
   20    | KW_IF expression KW_THEN . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 52
    KW_WHILE       shift, and go to state 53
    KW_READ        shift, and go to state 54
    KW_RETURN      shift, and go to state 55
    KW_PRINT       shift, and go to state 56
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 57

    $default  reduce using rule 26 (cmd)

    name         go to state 58
    vector       go to state 59
    cmdBlock     go to state 60
    cmd          go to state 102
    attribution  go to state 62


State 96

   21 cmd: KW_WHILE expression cmdBlock .

    $default  reduce using rule 21 (cmd)


State 97

   15 cmdBlock: '{' cmdList '}' .

    $default  reduce using rule 15 (cmdBlock)


State 98

   16 cmdList: cmd ';' . cmdList

    KW_IF          shift, and go to state 52
    KW_WHILE       shift, and go to state 53
    KW_READ        shift, and go to state 54
    KW_RETURN      shift, and go to state 55
    KW_PRINT       shift, and go to state 56
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 57

    ';'       reduce using rule 26 (cmd)
    $default  reduce using rule 17 (cmdList)

    name         go to state 58
    vector       go to state 59
    cmdBlock     go to state 60
    cmdList      go to state 103
    cmd          go to state 87
    attribution  go to state 62


State 99

   37 attribution: name '=' expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47

    $default  reduce using rule 37 (attribution)


State 100

   38 attribution: vector '=' expression .
   43 expression: expression . '+' expression
   44           | expression . '-' expression
   45           | expression . '*' expression
   46           | expression . '/' expression
   47           | expression . '<' expression
   48           | expression . '>' expression
   49           | expression . OPERATOR_LE expression
   50           | expression . OPERATOR_GE expression
   51           | expression . OPERATOR_EQ expression
   52           | expression . OPERATOR_OR expression
   53           | expression . OPERATOR_AND expression

    OPERATOR_LE   shift, and go to state 37
    OPERATOR_GE   shift, and go to state 38
    OPERATOR_EQ   shift, and go to state 39
    OPERATOR_OR   shift, and go to state 40
    OPERATOR_AND  shift, and go to state 41
    '<'           shift, and go to state 42
    '>'           shift, and go to state 43
    '+'           shift, and go to state 44
    '-'           shift, and go to state 45
    '*'           shift, and go to state 46
    '/'           shift, and go to state 47

    $default  reduce using rule 38 (attribution)


State 101

   32 argList: expression ',' argList .

    $default  reduce using rule 32 (argList)


State 102

   19 cmd: KW_IF expression KW_THEN cmd .
   20    | KW_IF expression KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 104

    KW_ELSE   [reduce using rule 19 (cmd)]
    $default  reduce using rule 19 (cmd)


State 103

   16 cmdList: cmd ';' cmdList .

    $default  reduce using rule 16 (cmdList)


State 104

   20 cmd: KW_IF expression KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 52
    KW_WHILE       shift, and go to state 53
    KW_READ        shift, and go to state 54
    KW_RETURN      shift, and go to state 55
    KW_PRINT       shift, and go to state 56
    TK_IDENTIFIER  shift, and go to state 10
    '{'            shift, and go to state 57

    $default  reduce using rule 26 (cmd)

    name         go to state 58
    vector       go to state 59
    cmdBlock     go to state 60
    cmd          go to state 105
    attribution  go to state 62


State 105

   20 cmd: KW_IF expression KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 20 (cmd)
